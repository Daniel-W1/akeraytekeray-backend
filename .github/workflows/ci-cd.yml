name: CI/CD Pipeline

on:
  push:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies # only need eslint actually
        run: npm ci --legacy-peer-deps

      - name: Run Lint
        run: npm run lint

  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgis/postgis:17-3.4-alpine # postgres image with postGIS extension
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test
        ports:
          - 5432:5432
    env:
      CI: true
      ENVIRONMENT: test
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Wait for PostgreSQL to start
        run: |
          until pg_isready -h localhost -p 5432 -U postgres; do
            echo "Waiting for DB to start..."
          done
          echo "DB is ready to accept requests!"

      - name: Run Tests
        run: npm run test

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Build
        run: npm run build

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    env: 
      ENVIRONMENT: prod
      # DATABASE_URL is a secret
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Deploy to Server
        run: |
          echo "Deploying application..."
